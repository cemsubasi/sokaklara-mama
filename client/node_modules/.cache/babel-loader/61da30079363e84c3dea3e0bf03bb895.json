{"ast":null,"code":"import { axi } from \"../../utils/config\";\nimport xicon from \"../../images/xxx.png\";\n\nfunction deleteFoodCircle(id, cityCircle) {\n  const arg = {\n    id: id\n  };\n  return axi(\"delete\", \"/food\", {\n    data: arg\n  }).then(res => {\n    cityCircle.setMap(null);\n  }).catch(console.log);\n}\n\nfunction deleteWaterCircle(id, cityCircle) {\n  const arg = {\n    id: id\n  };\n  return axi(\"delete\", \"/water\", {\n    data: arg\n  }).then(res => {\n    cityCircle.setMap(null);\n  }).catch(console.log);\n}\n\nexport function addFoodCircle(map, cityList, user = \" \", setFoodListOfCities) {\n  cityList.forEach(each => {\n    const cityFoodCircle = new window.google.maps.Circle({\n      strokeColor: user === each.email ? \"purple\" : \"green\",\n      strokeOpacity: 0.8,\n      strokeWeight: 1,\n      fillColor: \"green\",\n      fillOpacity: 0.35,\n      map,\n      center: {\n        lat: each.lat,\n        lng: each.lng\n      },\n      radius: 100\n    });\n\n    if (each.info) {\n      const infowindow = new window.google.maps.InfoWindow({\n        content: each.info,\n        position: {\n          lat: each.lat,\n          lng: each.lng\n        }\n      });\n      cityFoodCircle.addListener(\"click\", () => {\n        infowindow.open(map, cityFoodCircle);\n      });\n    }\n\n    if (each.email === user) {\n      cityFoodCircle.addListener(\"click\", () => {\n        const xmarker = new window.google.maps.Marker({\n          position: {\n            lat: each.lat + 0.00065,\n            lng: each.lng + 0.00065\n          },\n          map,\n          title: \"undo circle\",\n          icon: xicon\n        });\n        xmarker.addListener(\"click\", () => {\n          alert(\"Deleted\");\n          deleteFoodCircle(each.id, cityFoodCircle);\n          setFoodListOfCities(cityList.filter(e => e.id !== each.id));\n          xmarker.setMap(null);\n        });\n        map.addListener(\"dragstart\", () => {\n          xmarker.setMap(null);\n        });\n      });\n    }\n  });\n}\nexport function addWaterCircle(map, cityList, user = \" \", setWaterListOfCities) {\n  cityList.forEach(each => {\n    const cityWaterCircle = new window.google.maps.Circle({\n      strokeColor: user === each.email ? \"purple\" : \"blue\",\n      strokeOpacity: 0.8,\n      strokeWeight: 1,\n      fillColor: \"blue\",\n      fillOpacity: 0.35,\n      map,\n      center: {\n        lat: each.lat,\n        lng: each.lng\n      },\n      radius: 100\n    });\n\n    if (each.info) {\n      const infowindow = new window.google.maps.InfoWindow({\n        content: each.info,\n        position: {\n          lat: each.lat,\n          lng: each.lng\n        }\n      });\n      cityWaterCircle.addListener(\"click\", () => {\n        infowindow.open(map, cityWaterCircle);\n      });\n    }\n\n    if (each.email === user) {\n      cityWaterCircle.addListener(\"click\", () => {\n        const xmarker = new window.google.maps.Marker({\n          position: {\n            lat: each.lat + 0.00065,\n            lng: each.lng + 0.00065\n          },\n          map,\n          title: \"undo circle\",\n          icon: xicon\n        });\n        xmarker.addListener(\"click\", () => {\n          alert(\"Deleted\");\n          deleteWaterCircle(each.id, cityWaterCircle);\n          setWaterListOfCities(cityList.filter(e => e.id !== each.id));\n          xmarker.setMap(null);\n        });\n        map.addListener(\"dragstart\", () => {\n          xmarker.setMap(null);\n        });\n      });\n    }\n  });\n}","map":{"version":3,"sources":["/home/cem/projects/streets/client/src/components/map/circle.js"],"names":["axi","xicon","deleteFoodCircle","id","cityCircle","arg","data","then","res","setMap","catch","console","log","deleteWaterCircle","addFoodCircle","map","cityList","user","setFoodListOfCities","forEach","each","cityFoodCircle","window","google","maps","Circle","strokeColor","email","strokeOpacity","strokeWeight","fillColor","fillOpacity","center","lat","lng","radius","info","infowindow","InfoWindow","content","position","addListener","open","xmarker","Marker","title","icon","alert","filter","e","addWaterCircle","setWaterListOfCities","cityWaterCircle"],"mappings":"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","sourcesContent":["import { axi } from \"../../utils/config\";\nimport xicon from \"../../images/xxx.png\";\n\nfunction deleteFoodCircle(id, cityCircle) {\n\tconst arg = { id: id };\n\treturn axi(\"delete\", \"/food\", { data: arg })\n\t\t.then((res) => {\n\t\t\tcityCircle.setMap(null);\n\t\t})\n\t\t.catch(console.log);\n}\nfunction deleteWaterCircle(id, cityCircle) {\n\tconst arg = { id: id };\n\treturn axi(\"delete\", \"/water\", { data: arg })\n\t\t.then((res) => {\n\t\t\tcityCircle.setMap(null);\n\t\t})\n\t\t.catch(console.log);\n}\n\nexport function addFoodCircle(map, cityList, user = \" \", setFoodListOfCities) {\n\tcityList.forEach((each) => {\n\t\tconst cityFoodCircle = new window.google.maps.Circle({\n\t\t\tstrokeColor: user === each.email ? \"purple\" : \"green\",\n\t\t\tstrokeOpacity: 0.8,\n\t\t\tstrokeWeight: 1,\n\t\t\tfillColor: \"green\",\n\t\t\tfillOpacity: 0.35,\n\t\t\tmap,\n\t\t\tcenter: { lat: each.lat, lng: each.lng },\n\t\t\tradius: 100,\n\t\t});\n\t\tif (each.info) {\n\t\t\tconst infowindow = new window.google.maps.InfoWindow({\n\t\t\t\tcontent: each.info,\n\t\t\t\tposition: { lat: each.lat, lng: each.lng },\n\t\t\t});\n\t\t\tcityFoodCircle.addListener(\"click\", () => {\n\t\t\t\tinfowindow.open(map, cityFoodCircle);\n\t\t\t});\n\t\t}\n\t\tif (each.email === user) {\n\t\t\tcityFoodCircle.addListener(\"click\", () => {\n\t\t\t\tconst xmarker = new window.google.maps.Marker({\n\t\t\t\t\tposition: { lat: each.lat + 0.00065, lng: each.lng + 0.00065 },\n\t\t\t\t\tmap,\n\t\t\t\t\ttitle: \"undo circle\",\n\t\t\t\t\ticon: xicon,\n\t\t\t\t});\n\t\t\t\txmarker.addListener(\"click\", () => {\n\t\t\t\t\talert(\"Deleted\");\n\t\t\t\t\tdeleteFoodCircle(each.id, cityFoodCircle);\n\t\t\t\t\tsetFoodListOfCities(cityList.filter((e) => e.id !== each.id));\n\t\t\t\t\txmarker.setMap(null);\n\t\t\t\t});\n\t\t\t\tmap.addListener(\"dragstart\", () => {\n\t\t\t\t\txmarker.setMap(null);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport function addWaterCircle(\n\tmap,\n\tcityList,\n\tuser = \" \",\n\tsetWaterListOfCities\n) {\n\tcityList.forEach((each) => {\n\t\tconst cityWaterCircle = new window.google.maps.Circle({\n\t\t\tstrokeColor: user === each.email ? \"purple\" : \"blue\",\n\t\t\tstrokeOpacity: 0.8,\n\t\t\tstrokeWeight: 1,\n\t\t\tfillColor: \"blue\",\n\t\t\tfillOpacity: 0.35,\n\t\t\tmap,\n\t\t\tcenter: { lat: each.lat, lng: each.lng },\n\t\t\tradius: 100,\n\t\t});\n\t\tif (each.info) {\n\t\t\tconst infowindow = new window.google.maps.InfoWindow({\n\t\t\t\tcontent: each.info,\n\t\t\t\tposition: { lat: each.lat, lng: each.lng },\n\t\t\t});\n\t\t\tcityWaterCircle.addListener(\"click\", () => {\n\t\t\t\tinfowindow.open(map, cityWaterCircle);\n\t\t\t});\n\t\t}\n\t\tif (each.email === user) {\n\t\t\tcityWaterCircle.addListener(\"click\", () => {\n\t\t\t\tconst xmarker = new window.google.maps.Marker({\n\t\t\t\t\tposition: { lat: each.lat + 0.00065, lng: each.lng + 0.00065 },\n\t\t\t\t\tmap,\n\t\t\t\t\ttitle: \"undo circle\",\n\t\t\t\t\ticon: xicon,\n\t\t\t\t});\n\t\t\t\txmarker.addListener(\"click\", () => {\n\t\t\t\t\talert(\"Deleted\");\n\t\t\t\t\tdeleteWaterCircle(each.id, cityWaterCircle);\n\t\t\t\t\tsetWaterListOfCities(cityList.filter((e) => e.id !== each.id));\n\t\t\t\t\txmarker.setMap(null);\n\t\t\t\t});\n\t\t\t\tmap.addListener(\"dragstart\", () => {\n\t\t\t\t\txmarker.setMap(null);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n}\n"]},"metadata":{},"sourceType":"module"}