{"ast":null,"code":"var _jsxFileName = \"/home/cem/projects/streets/client/src/components/homepage/map/Map.js\",\n    _s = $RefreshSig$();\n\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { axi } from \"../../../utils/config\";\nimport { addFoodCircle, addWaterCircle } from \"./circle\";\nimport Spinner from \"../../../common/Spinner\";\nimport addMarker from \"./marker\";\nimport icongray from \"../../../images/button-gray.png\";\nimport styles from \"./map.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Mark() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"rgb(25,25,25)\",\n      fontFamily: \"Roboto,Arial,sans-serif\",\n      fontSize: \"24px\",\n      lineHeight: \"36px\",\n      paddingLeft: \"9px\",\n      paddingRight: \"9px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: icongray,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Mark;\n\nfunction Map(props) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const mapElement = useRef(null);\n  const centerElement = useRef(null);\n  const map = useRef({});\n  const markerRef = useRef(null);\n  useEffect(() => {\n    const loader = new Loader({\n      apiKey: props.apiKey || \"AIzaSyDit4G0bMDP54KRwVqRTzvFtFGMNPRt_mo\",\n      version: \"weekly\",\n      libraries: [\"places\"]\n    });\n    if (!props.initLocation || props.initLocation.lat === 0) return;\n    loader.load().then(() => {\n      map.current = new window.google.maps.Map(mapElement.current, {\n        zoom: 16,\n        center: props.initLocation,\n        scaleControl: false,\n        streetViewControl: false,\n        rotateControl: false,\n        mapTypeControl: false\n      });\n      map.current.controls[window.google.maps.ControlPosition.RIGHT_BOTTOM].push(centerElement.current);\n      addMarker(markerRef, props.initLocation, map.current);\n      addFoodCircle(map.current, props.foodListOfCities, props.user, props.setFoodListOfCities);\n      addWaterCircle(map.current, props.waterListOfCities, props.user, props.setWaterListOfCities);\n      setLoaded(true);\n    }).catch(console.log).then(() => {\n      axi(\"get\", \"/food\").then(res => {\n        props.setFoodListOfCities(res.response);\n      }).catch(console.log);\n      axi(\"get\", \"/water\").then(res => {\n        props.setWaterListOfCities(res.response);\n      }).catch(console.log);\n    }).catch(console.log); // .catch(console.log);\n  }, //eslint-disable-next-line\n  [props.initLocation]);\n  useEffect(() => {\n    if (map.current.setCenter) {\n      addFoodCircle(map.current, props.foodListOfCities, props.user, props.setFoodListOfCities);\n    }\n  }, //eslint-disable-next-line\n  [props.foodListOfCities]);\n  useEffect(() => {\n    if (map.current.setCenter) {\n      addWaterCircle(map.current, props.waterListOfCities, props.user, props.setWaterListOfCities);\n    }\n  }, //eslint-disable-next-line\n  [props.waterListOfCities]);\n  useEffect(() => {\n    if (markerRef.current) {\n      markerRef.current.setMap(null);\n      addMarker(markerRef, props.locationState, map.current);\n    }\n  }, [props.locationState]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.map,\n      style: loaded ? {} : {\n        display: \"none\"\n      },\n      ref: mapElement,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: centerElement,\n        style: {\n          backgroundColor: \"#fff\",\n          border: \"2px solid #fff\",\n          borderRadius: \"3px\",\n          boxShadow: \"0 2px 6px rgba(0,0,0,.3)\",\n          cursor: \"pointer\",\n          marginBottom: \"22px\",\n          textAlign: \"center\",\n          marginRight: \"10px\",\n          top: \"null\",\n          display: loaded ? \"block\" : \"none\"\n        },\n        onClick: () => {\n          map.current.setCenter(props.locationState);\n        },\n        children: /*#__PURE__*/_jsxDEV(Mark, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: loaded ? {\n        display: \"none\"\n      } : {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Map, \"AFm/HvlxrJsO9MPEL0kiEtx9yHA=\");\n\n_c2 = Map;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(Map);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Mark\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"sources":["/home/cem/projects/streets/client/src/components/homepage/map/Map.js"],"names":["Loader","useEffect","useRef","useState","connect","axi","addFoodCircle","addWaterCircle","Spinner","addMarker","icongray","styles","Mark","color","fontFamily","fontSize","lineHeight","paddingLeft","paddingRight","Map","props","loaded","setLoaded","mapElement","centerElement","map","markerRef","loader","apiKey","version","libraries","initLocation","lat","load","then","current","window","google","maps","zoom","center","scaleControl","streetViewControl","rotateControl","mapTypeControl","controls","ControlPosition","RIGHT_BOTTOM","push","foodListOfCities","user","setFoodListOfCities","waterListOfCities","setWaterListOfCities","catch","console","log","res","response","setCenter","setMap","locationState","display","backgroundColor","border","borderRadius","boxShadow","cursor","marginBottom","textAlign","marginRight","top","alignItems","justifyContent","height","mapStateToProps","state"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,2BAAvB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,GAAT,QAAoB,uBAApB;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,UAA9C;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;;AAEA,SAASC,IAAT,GAAgB;AACf,sBACC;AACC,IAAA,KAAK,EAAE;AACNC,MAAAA,KAAK,EAAE,eADD;AAENC,MAAAA,UAAU,EAAE,yBAFN;AAGNC,MAAAA,QAAQ,EAAE,MAHJ;AAINC,MAAAA,UAAU,EAAE,MAJN;AAKNC,MAAAA,WAAW,EAAE,KALP;AAMNC,MAAAA,YAAY,EAAE;AANR,KADR;AAAA,2BAUC;AAAK,MAAA,GAAG,EAAER,QAAV;AAAoB,MAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AAVD;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;KAfQE,I;;AAiBT,SAASO,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMoB,UAAU,GAAGrB,MAAM,CAAC,IAAD,CAAzB;AACA,QAAMsB,aAAa,GAAGtB,MAAM,CAAC,IAAD,CAA5B;AACA,QAAMuB,GAAG,GAAGvB,MAAM,CAAC,EAAD,CAAlB;AACA,QAAMwB,SAAS,GAAGxB,MAAM,CAAC,IAAD,CAAxB;AAEAD,EAAAA,SAAS,CACR,MAAM;AACL,UAAM0B,MAAM,GAAG,IAAI3B,MAAJ,CAAW;AACzB4B,MAAAA,MAAM,EAAER,KAAK,CAACQ,MAAN,IAAgB,yCADC;AAEzBC,MAAAA,OAAO,EAAE,QAFgB;AAGzBC,MAAAA,SAAS,EAAE,CAAC,QAAD;AAHc,KAAX,CAAf;AAMA,QAAI,CAACV,KAAK,CAACW,YAAP,IAAuBX,KAAK,CAACW,YAAN,CAAmBC,GAAnB,KAA2B,CAAtD,EAAyD;AAEzDL,IAAAA,MAAM,CACJM,IADF,GAEEC,IAFF,CAEO,MAAM;AACXT,MAAAA,GAAG,CAACU,OAAJ,GAAc,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBnB,GAAvB,CAA2BI,UAAU,CAACY,OAAtC,EAA+C;AAC5DI,QAAAA,IAAI,EAAE,EADsD;AAE5DC,QAAAA,MAAM,EAAEpB,KAAK,CAACW,YAF8C;AAG5DU,QAAAA,YAAY,EAAE,KAH8C;AAI5DC,QAAAA,iBAAiB,EAAE,KAJyC;AAK5DC,QAAAA,aAAa,EAAE,KAL6C;AAM5DC,QAAAA,cAAc,EAAE;AAN4C,OAA/C,CAAd;AAQAnB,MAAAA,GAAG,CAACU,OAAJ,CAAYU,QAAZ,CACCT,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBQ,eAAnB,CAAmCC,YADpC,EAEEC,IAFF,CAEOxB,aAAa,CAACW,OAFrB;AAGA1B,MAAAA,SAAS,CAACiB,SAAD,EAAYN,KAAK,CAACW,YAAlB,EAAgCN,GAAG,CAACU,OAApC,CAAT;AACA7B,MAAAA,aAAa,CACZmB,GAAG,CAACU,OADQ,EAEZf,KAAK,CAAC6B,gBAFM,EAGZ7B,KAAK,CAAC8B,IAHM,EAIZ9B,KAAK,CAAC+B,mBAJM,CAAb;AAMA5C,MAAAA,cAAc,CACbkB,GAAG,CAACU,OADS,EAEbf,KAAK,CAACgC,iBAFO,EAGbhC,KAAK,CAAC8B,IAHO,EAIb9B,KAAK,CAACiC,oBAJO,CAAd;AAMA/B,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,KA5BF,EA6BEgC,KA7BF,CA6BQC,OAAO,CAACC,GA7BhB,EA8BEtB,IA9BF,CA8BO,MAAM;AACX7B,MAAAA,GAAG,CAAC,KAAD,EAAQ,OAAR,CAAH,CACE6B,IADF,CACQuB,GAAD,IAAS;AACdrC,QAAAA,KAAK,CAAC+B,mBAAN,CAA0BM,GAAG,CAACC,QAA9B;AACA,OAHF,EAIEJ,KAJF,CAIQC,OAAO,CAACC,GAJhB;AAKAnD,MAAAA,GAAG,CAAC,KAAD,EAAQ,QAAR,CAAH,CACE6B,IADF,CACQuB,GAAD,IAAS;AACdrC,QAAAA,KAAK,CAACiC,oBAAN,CAA2BI,GAAG,CAACC,QAA/B;AACA,OAHF,EAIEJ,KAJF,CAIQC,OAAO,CAACC,GAJhB;AAKA,KAzCF,EA0CEF,KA1CF,CA0CQC,OAAO,CAACC,GA1ChB,EATK,CAoDL;AACA,GAtDO,EAuDR;AACA,GAACpC,KAAK,CAACW,YAAP,CAxDQ,CAAT;AA2DA9B,EAAAA,SAAS,CACR,MAAM;AACL,QAAIwB,GAAG,CAACU,OAAJ,CAAYwB,SAAhB,EAA2B;AAC1BrD,MAAAA,aAAa,CACZmB,GAAG,CAACU,OADQ,EAEZf,KAAK,CAAC6B,gBAFM,EAGZ7B,KAAK,CAAC8B,IAHM,EAIZ9B,KAAK,CAAC+B,mBAJM,CAAb;AAMA;AACD,GAVO,EAWR;AACA,GAAC/B,KAAK,CAAC6B,gBAAP,CAZQ,CAAT;AAcAhD,EAAAA,SAAS,CACR,MAAM;AACL,QAAIwB,GAAG,CAACU,OAAJ,CAAYwB,SAAhB,EAA2B;AAC1BpD,MAAAA,cAAc,CACbkB,GAAG,CAACU,OADS,EAEbf,KAAK,CAACgC,iBAFO,EAGbhC,KAAK,CAAC8B,IAHO,EAIb9B,KAAK,CAACiC,oBAJO,CAAd;AAMA;AACD,GAVO,EAWR;AACA,GAACjC,KAAK,CAACgC,iBAAP,CAZQ,CAAT;AAeAnD,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIyB,SAAS,CAACS,OAAd,EAAuB;AACtBT,MAAAA,SAAS,CAACS,OAAV,CAAkByB,MAAlB,CAAyB,IAAzB;AACAnD,MAAAA,SAAS,CAACiB,SAAD,EAAYN,KAAK,CAACyC,aAAlB,EAAiCpC,GAAG,CAACU,OAArC,CAAT;AACA;AACD,GALQ,EAKN,CAACf,KAAK,CAACyC,aAAP,CALM,CAAT;AAOA,sBACC;AAAA,4BACC;AACC,MAAA,SAAS,EAAElD,MAAM,CAACc,GADnB;AAEC,MAAA,KAAK,EAAEJ,MAAM,GAAG,EAAH,GAAQ;AAAEyC,QAAAA,OAAO,EAAE;AAAX,OAFtB;AAGC,MAAA,GAAG,EAAEvC,UAHN;AAAA,6BAKC;AACC,QAAA,GAAG,EAAEC,aADN;AAEC,QAAA,KAAK,EAAE;AACNuC,UAAAA,eAAe,EAAE,MADX;AAENC,UAAAA,MAAM,EAAE,gBAFF;AAGNC,UAAAA,YAAY,EAAE,KAHR;AAINC,UAAAA,SAAS,EAAE,0BAJL;AAKNC,UAAAA,MAAM,EAAE,SALF;AAMNC,UAAAA,YAAY,EAAE,MANR;AAONC,UAAAA,SAAS,EAAE,QAPL;AAQNC,UAAAA,WAAW,EAAE,MARP;AASNC,UAAAA,GAAG,EAAE,MATC;AAUNT,UAAAA,OAAO,EAAEzC,MAAM,GAAG,OAAH,GAAa;AAVtB,SAFR;AAcC,QAAA,OAAO,EAAE,MAAM;AACdI,UAAAA,GAAG,CAACU,OAAJ,CAAYwB,SAAZ,CAAsBvC,KAAK,CAACyC,aAA5B;AACA,SAhBF;AAAA,+BAkBF,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAlBE;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA,YADD,eA2BC;AACC,MAAA,KAAK,EACJxC,MAAM,GACH;AAAEyC,QAAAA,OAAO,EAAE;AAAX,OADG,GAEH;AACAA,QAAAA,OAAO,EAAE,MADT;AAEAU,QAAAA,UAAU,EAAE,QAFZ;AAGAC,QAAAA,cAAc,EAAE,QAHhB;AAIAC,QAAAA,MAAM,EAAE;AAJR,OAJL;AAAA,6BAYC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAZD;AAAA;AAAA;AAAA;AAAA,YA3BD;AAAA,kBADD;AA4CA;;GAlJQvD,G;;MAAAA,G;;AAoJT,MAAMwD,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACN1B,IAAAA,IAAI,EAAE0B,KAAK,CAAC1B;AADN,GAAP;AAGA,CAJD;;AAMA,eAAe9C,OAAO,CAACuE,eAAD,CAAP,CAAyBxD,GAAzB,CAAf","sourcesContent":["import { Loader } from \"@googlemaps/js-api-loader\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { axi } from \"../../../utils/config\";\nimport { addFoodCircle, addWaterCircle } from \"./circle\";\nimport Spinner from \"../../../common/Spinner\";\nimport addMarker from \"./marker\";\nimport icongray from \"../../../images/button-gray.png\";\nimport styles from \"./map.module.css\";\n\nfunction Mark() {\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tcolor: \"rgb(25,25,25)\",\n\t\t\t\tfontFamily: \"Roboto,Arial,sans-serif\",\n\t\t\t\tfontSize: \"24px\",\n\t\t\t\tlineHeight: \"36px\",\n\t\t\t\tpaddingLeft: \"9px\",\n\t\t\t\tpaddingRight: \"9px\",\n\t\t\t}}\n\t\t>\n\t\t\t<img src={icongray} alt=\"\" />\n\t\t</div>\n\t);\n}\n\nfunction Map(props) {\n\tconst [loaded, setLoaded] = useState(false);\n\tconst mapElement = useRef(null);\n\tconst centerElement = useRef(null);\n\tconst map = useRef({});\n\tconst markerRef = useRef(null);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst loader = new Loader({\n\t\t\t\tapiKey: props.apiKey || \"AIzaSyDit4G0bMDP54KRwVqRTzvFtFGMNPRt_mo\",\n\t\t\t\tversion: \"weekly\",\n\t\t\t\tlibraries: [\"places\"],\n\t\t\t});\n\n\t\t\tif (!props.initLocation || props.initLocation.lat === 0) return;\n\n\t\t\tloader\n\t\t\t\t.load()\n\t\t\t\t.then(() => {\n\t\t\t\t\tmap.current = new window.google.maps.Map(mapElement.current, {\n\t\t\t\t\t\tzoom: 16,\n\t\t\t\t\t\tcenter: props.initLocation,\n\t\t\t\t\t\tscaleControl: false,\n\t\t\t\t\t\tstreetViewControl: false,\n\t\t\t\t\t\trotateControl: false,\n\t\t\t\t\t\tmapTypeControl: false,\n\t\t\t\t\t});\n\t\t\t\t\tmap.current.controls[\n\t\t\t\t\t\twindow.google.maps.ControlPosition.RIGHT_BOTTOM\n\t\t\t\t\t].push(centerElement.current);\n\t\t\t\t\taddMarker(markerRef, props.initLocation, map.current);\n\t\t\t\t\taddFoodCircle(\n\t\t\t\t\t\tmap.current,\n\t\t\t\t\t\tprops.foodListOfCities,\n\t\t\t\t\t\tprops.user,\n\t\t\t\t\t\tprops.setFoodListOfCities\n\t\t\t\t\t);\n\t\t\t\t\taddWaterCircle(\n\t\t\t\t\t\tmap.current,\n\t\t\t\t\t\tprops.waterListOfCities,\n\t\t\t\t\t\tprops.user,\n\t\t\t\t\t\tprops.setWaterListOfCities\n\t\t\t\t\t);\n\t\t\t\t\tsetLoaded(true);\n\t\t\t\t})\n\t\t\t\t.catch(console.log)\n\t\t\t\t.then(() => {\n\t\t\t\t\taxi(\"get\", \"/food\")\n\t\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\t\tprops.setFoodListOfCities(res.response);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(console.log);\n\t\t\t\t\taxi(\"get\", \"/water\")\n\t\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\t\tprops.setWaterListOfCities(res.response);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(console.log);\n\t\t\t\t})\n\t\t\t\t.catch(console.log);\n\t\t\t// .catch(console.log);\n\t\t},\n\t\t//eslint-disable-next-line\n\t\t[props.initLocation]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (map.current.setCenter) {\n\t\t\t\taddFoodCircle(\n\t\t\t\t\tmap.current,\n\t\t\t\t\tprops.foodListOfCities,\n\t\t\t\t\tprops.user,\n\t\t\t\t\tprops.setFoodListOfCities\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t//eslint-disable-next-line\n\t\t[props.foodListOfCities]\n\t);\n\tuseEffect(\n\t\t() => {\n\t\t\tif (map.current.setCenter) {\n\t\t\t\taddWaterCircle(\n\t\t\t\t\tmap.current,\n\t\t\t\t\tprops.waterListOfCities,\n\t\t\t\t\tprops.user,\n\t\t\t\t\tprops.setWaterListOfCities\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t//eslint-disable-next-line\n\t\t[props.waterListOfCities]\n\t);\n\n\tuseEffect(() => {\n\t\tif (markerRef.current) {\n\t\t\tmarkerRef.current.setMap(null);\n\t\t\taddMarker(markerRef, props.locationState, map.current);\n\t\t}\n\t}, [props.locationState]);\n\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName={styles.map}\n\t\t\t\tstyle={loaded ? {} : { display: \"none\" }}\n\t\t\t\tref={mapElement}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tref={centerElement}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: \"#fff\",\n\t\t\t\t\t\tborder: \"2px solid #fff\",\n\t\t\t\t\t\tborderRadius: \"3px\",\n\t\t\t\t\t\tboxShadow: \"0 2px 6px rgba(0,0,0,.3)\",\n\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\tmarginBottom: \"22px\",\n\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\tmarginRight: \"10px\",\n\t\t\t\t\t\ttop: \"null\",\n\t\t\t\t\t\tdisplay: loaded ? \"block\" : \"none\",\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tmap.current.setCenter(props.locationState);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t<Mark />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tstyle={\n\t\t\t\t\tloaded\n\t\t\t\t\t\t? { display: \"none\" }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t\theight: \"100%\",\n\t\t\t\t\t\t  }\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<Spinner />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tuser: state.user,\n\t};\n};\n\nexport default connect(mapStateToProps)(Map);\n"]},"metadata":{},"sourceType":"module"}