{"ast":null,"code":"import { axi } from \"../../utils/config\";\nimport xicon from \"../../images/xxx.png\";\n\nfunction deleteCircle(id, cityCircle) {\n  const arg = {\n    id: id\n  };\n  return axi(\"delete\", \"/\", {\n    data: arg\n  }).then(res => {\n    cityCircle.setMap(null);\n  }).catch(console.log);\n}\n\nfunction addCircle(map, cityList, user = \" \") {\n  cityList.forEach(each => {\n    const cityCircle = new window.google.maps.Circle({\n      strokeColor: user === each.email ? \"purple\" : \"green\",\n      strokeOpacity: 0.8,\n      strokeWeight: 1,\n      fillColor: \"green\",\n      fillOpacity: 0.35,\n      map,\n      center: {\n        lat: each.lat,\n        lng: each.lng\n      },\n      radius: 100\n    });\n\n    if (each.info) {\n      const infowindow = new window.google.maps.InfoWindow({\n        content: each.info,\n        position: {\n          lat: each.lat,\n          lng: each.lng\n        }\n      });\n      cityCircle.addListener(\"click\", () => {\n        infowindow.open(map, cityCircle);\n      });\n    }\n\n    if (each.email === user) {\n      cityCircle.addListener(\"click\", () => {\n        const xmarker = new window.google.maps.Marker({\n          position: {\n            lat: each.lat + 0.00065,\n            lng: each.lng + 0.00065\n          },\n          map,\n          title: \"undo circle\",\n          icon: xicon\n        });\n        xmarker.addListener(\"click\", () => {\n          alert(\"Deleted\");\n          deleteCircle(each.id, cityCircle);\n          xmarker.setMap(null);\n        });\n        map.addListener(\"dragstart\", () => {\n          xmarker.setMap(null);\n        });\n      });\n    }\n  });\n}\n\nexport default addCircle;","map":{"version":3,"sources":["/home/cem/projects/streets/client/src/components/map/circle.js"],"names":["axi","xicon","deleteCircle","id","cityCircle","arg","data","then","res","setMap","catch","console","log","addCircle","map","cityList","user","forEach","each","window","google","maps","Circle","strokeColor","email","strokeOpacity","strokeWeight","fillColor","fillOpacity","center","lat","lng","radius","info","infowindow","InfoWindow","content","position","addListener","open","xmarker","Marker","title","icon","alert"],"mappings":"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","sourcesContent":["import { axi } from \"../../utils/config\";\nimport xicon from \"../../images/xxx.png\";\n\nfunction deleteCircle(id, cityCircle) {\n\tconst arg = { id: id };\n\treturn axi(\"delete\", \"/\", { data: arg })\n\t\t.then((res) => {\n\t\t\tcityCircle.setMap(null);\n\t\t})\n\t\t.catch(console.log);\n}\n\nfunction addCircle(map, cityList, user = \" \") {\n\tcityList.forEach((each) => {\n\t\tconst cityCircle = new window.google.maps.Circle({\n\t\t\tstrokeColor: user === each.email ? \"purple\" : \"green\",\n\t\t\tstrokeOpacity: 0.8,\n\t\t\tstrokeWeight: 1,\n\t\t\tfillColor: \"green\",\n\t\t\tfillOpacity: 0.35,\n\t\t\tmap,\n\t\t\tcenter: { lat: each.lat, lng: each.lng },\n\t\t\tradius: 100,\n\t\t});\n\t\tif (each.info) {\n\t\t\tconst infowindow = new window.google.maps.InfoWindow({\n\t\t\t\tcontent: each.info,\n\t\t\t\tposition: { lat: each.lat, lng: each.lng },\n\t\t\t});\n\t\t\tcityCircle.addListener(\"click\", () => {\n\t\t\t\tinfowindow.open(map, cityCircle);\n\t\t\t});\n\t\t}\n\t\tif (each.email === user) {\n\t\t\tcityCircle.addListener(\"click\", () => {\n\t\t\t\tconst xmarker = new window.google.maps.Marker({\n\t\t\t\t\tposition: { lat: each.lat + 0.00065, lng: each.lng + 0.00065 },\n\t\t\t\t\tmap,\n\t\t\t\t\ttitle: \"undo circle\",\n\t\t\t\t\ticon: xicon,\n\t\t\t\t});\n\t\t\t\txmarker.addListener(\"click\", () => {\n\t\t\t\t\talert(\"Deleted\");\n\t\t\t\t\tdeleteCircle(each.id, cityCircle);\n\t\t\t\t\txmarker.setMap(null);\n\t\t\t\t});\n\t\t\t\tmap.addListener(\"dragstart\", () => {\n\t\t\t\t\txmarker.setMap(null);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport default addCircle;\n"]},"metadata":{},"sourceType":"module"}